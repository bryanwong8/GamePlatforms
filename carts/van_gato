pico-8 cartridge // http://www.pico-8.com
version 16
__lua__

-->8
curstate = 1
colors = {12,1}
--change these to change the colors you see in the sine waves
--color table is 12, 10, 15 for first background
--color table is 8 (red), 10, 15 or 14(pink), 10, 15 for second background
--not sure how to swap that out in code but it would be great

function _draw()

	cls()
	if curstate == 1 then
		drawsplash()
	elseif curstate == 2 then
		drawscreen()
	elseif curstate == 3 then
		drawscreen2()
	elseif curstate == 4 then
		winscreen()
	end


end

function drawsplash()
r = rnd
cls(1)
map(66,2,0,4,16,16)
print("press ❎ to begin", 32, 84, 7)
srand(27)
p=pset
for i=-1,1,2 do
for x=1,10 do
circ(96+x*i,64+x/3,4+x/5+i,9) --body
p(90+x,70+r(3)+x/10,9) --feet
p(82+i*3+r(3),65+r(3)-i,12+r(2)) --ears
if(i==-1)x+=10
circ(112+sin(x/20-t()/2)*x/5,70+x/1.5,1,9) --tail
end
end
for i=-2,2 do
if(i!=0)p(84+i,70-i/4,6)
end

end

function drawscreen()


	if (win) then
	curstate =3
	else
	

	camera(896 , 376)
	draw_sky()

	--map(0,0,896,376,16,16)

	camera(896 , (player.y - 104))
	
	--draw_sky()
	map(16,0,128,0,128,64)
	--map(0,0,128,-400,128,64)
	--map(0,26,128,208,16,16)
	map(32,0,896,player.y - 104,16,64)
	--drawsky = not drawsky
	test = col()
	if player.spritenum == 48 then
	spr(32, player.x, player.y -8)
	end
	spr(player.spritenum, player.x, player.y, 1, 1, player.flp, false)
	
	if player.pcollect.p1 then
	sspr(72,8,8,8,907, player.y - 102,4,4)
	end
	if player.pcollect.p2 then
	sspr(72,8,8,8,914, player.y - 102,4,4)
	end
	if player.pcollect.p3 then
	sspr(72,8,8,8,922, player.y - 102,4,4)
	end
	if player.pcollect.p4 then
	sspr(72,8,8,8,929, player.y - 102,4,4)
	end
	
	if player.scollect.p1 then
	sspr(40,24,8,8,947, player.y - 102,6,6)
	end
	if player.scollect.p2 then
	sspr(48,24,8,8,954, player.y - 102,6,6)
	end
	if player.scollect.p3 then
	sspr(56,24,8,8,961, player.y - 102,6,6)
	end
	

	
	--print(player.x, player.x + 8, player.y)
	--print(player.scollect.p1, player.x + 8, player.y + 8)
	end

end

function drawscreen2()



	if (win) then
	curstate =3
	else
	

	camera(768 , 376)
	

	--map(0,0,896,376,16,16)

	camera(768 , (player.y - 104))
	
	draw_sky()
	map(16,0,128,0,128,64)
	--map(0,0,128,-400,128,64)
	--map(0,26,128,208,16,16)
	map(32,0,768,player.y - 104,16,64)
	--drawsky = not drawsky
	test = col()
	if player.spritenum == 48 then
	spr(32, player.x, player.y -8)
	end
	spr(player.spritenum, player.x, player.y, 1, 1, player.flp, false)
	
	if player.pcollect.p1 then
	sspr(72,8,8,8,779, player.y - 102,4,4)
	end
	if player.pcollect.p2 then
	sspr(80,8,8,8,786, player.y - 102,4,4)
	end
	if player.pcollect.p3 then
	sspr(72,16,8,8,794, player.y - 102,4,4)
	end
	if player.pcollect.p4 then
	sspr(80,16,8,8,801, player.y - 102,4,4)
	end
	
	if player.scollect.p1 then
	sspr(40,24,8,8,819, player.y - 102,6,6)
	end
	if player.scollect.p2 then
	sspr(48,24,8,8,826, player.y - 102,6,6)
	end
	if player.scollect.p3 then
	sspr(56,24,8,8,833, player.y - 102,6,6)
	end
	

	
	--print(player.x, player.x + 8, player.y)
	--print(player.scollect.p1, player.x + 8, player.y + 8)
	end
end







function winscreen()
camera(0,0) 
sspr(8, 0, 8, 8, 0, 0, 32,32)
sspr(16,0, 8, 8, 32,0,32,32)
sspr(24,0, 8, 8, 64,0,32,32)
sspr(32,0, 8, 8, 96,0,32,32)

sspr(8, 8, 8, 8, 0, 32, 32,32)
sspr(16,8, 8, 8, 32,32,32,32)
sspr(24,8, 8, 8, 64,32,32,32)
sspr(32,8, 8, 8, 96,32,32,32)

sspr(8, 16, 8, 8, 0, 64, 32,32)
sspr(16,16, 8, 8, 32,64,32,32)
sspr(24,16, 8, 8, 64,64,32,32)
sspr(32,16, 8, 8, 96,64,32,32)

sspr(8, 24, 8, 8, 0, 96, 32,32)
sspr(16,24, 8, 8, 32,96,32,32)
sspr(24,24, 8, 8, 64,96,32,32)
sspr(32,24, 8, 8, 96,96,32,32)




print("you win!", 16, 90)
print("press x",16,98)
print("to restart",16,106)
end







function draw_sky()

--rectfill(0,0,255,349,1)
--background rectangle (dark blue in this case)
--x1,y1,x2,y2,color
for x=0,128 do -- these are the particles you see

local u=sin(x/250-t()/16)*32 -- first sine wave
local v=sin(x/256-(t()+0.25)/16)*32 -- second sine wave
--change the number t is being divided by to make it go faster/slower
--change the number x is being divided by to change the length of the wave

--line(x + 128,224+64+u-10*1.3,x+128,224+64+u+10*1.3,1)
--uncomment this if you want an outline of the wave surrounding it (last parameter is the color)

srand(flr((x/(1.4+sin(t()/8)*.2)-t()*14)))

for i=1,min(x,6) do

if curstate==2 then
--fills in circles of the particles
--xpos, ypos,radius, color
circfill(x+896,376+64+u+sin(rnd())*12*rnd(2),1,colors[flr(rnd(2))+1])
--does the same thing but with pixels
--xpos,ypos,color
pset(x+896,342+64+v+sin(rnd())*12*rnd(2),colors[flr(rnd(2))+1])
elseif curstate==3 then
circfill(x+768,376+64+u+sin(rnd())*12*rnd(2),1,colors[flr(rnd(2))+1])
--does the same thing but with pixels
--xpos,ypos,color
pset(x+768,342+64+v+sin(rnd())*12*rnd(2),colors[flr(rnd(2))+1])
end
--circfill(x+896,player.y -rnd(128),1,colors[flr(rnd(2))+1])

end

end

end
-->8
player = {} 
player.states = {}
player.pcollect = {p1,p2,p3,p4}
player.pcollect.p1 = false
player.pcollect.p2 = false
player.pcollect.p3 = false
player.pcollect.p4 = false

player.scollect = {p1,p2,p3}
player.scollect.p1 = false
player.scollect.p2 = false
player.scollect.p3 = false


player.states.idle = true
player.states.walking = false
player.states.running = false
player.states.jumping = false
player.landed = false

player.slowdown = false
player.willjump = false
player.jumpt = 5
player.movet = 0
player.idletim = 0
player.croucht = 0
player.idles = 0
player.crouch1 = true
player.debug = false
player.x = 972
player.nextx = 64
player.y = 486
player.nexty = 320
player.dx = 0
player.ddx = 0
player.dy = 0
player.ddy = 0
player.g = -10
player.maxspeed = 1
player.turnaroundt = 0
player.spritenum = 6
sprites = {5,23,24}
prev_t = 0
dt = 0
test2 = 0


win = false


for i = 0,7 do 
player[i] = {} 
end
spr(6,0,0)
for x = 0,7 do
	for y = 0,7 do 
		if pget(x,y) != 0 then
			player[x][y] = true
		else
			player[x][y] = false
		end
	end
end


function col ()
	for x = 0,7 do 
		for y = 0,7 do
			if player[x][y] then
				local p = pget(player.x + x, player.y + y) 
					if p == 2  then return p end
			end
		end
	end
	
return 44



end


function _init()
prev_t = time()

end


function _update()
test2 = test

	if curstate == 1 then
		updatesplash()
	elseif curstate == 2 or curstate ==3 then
		moveplayer()
	elseif curstate == 4 then
		updatewinscreen()
	end

end

function moveplayer()
	
	
	if player.pcollect.p1 and
				player.pcollect.p2 and
				player.pcollect.p3 and
				player.pcollect.p4 then
				
				curstate = 4
	end
	
	
	if player.states.walking then



	player.movet += 1
	if player.movet >= 7 then
	player.spritenum = 7
	end
	if player.movet >= 15 then
	player.spritenum = 8
	end
	if player.movet >= 21 then
	player.spritenum = 9
	end
	if player.movet >= 30 then
	player.movet = 0
	player.spritenum =6
	end
	
end

if player.states.idle and not player.willjump then
	
	
	player.idletim += 1
	
	
	if player.idletim >= 60  and player.idletim <95 then 
		player.spritenum = 5
	end
	if player.idletim >= 95 then 
		if ((player.idletim % 15) == 0) then
		
		player.spritenum = sprites[ player.idles % 3 + 1] 
		player.idles +=1
		end
	end

else


	player.idletim = 0
	
	
end

if player.willjump then

	player.croucht += 1
	
	
	if player.croucht % 15 == 0 then
		player.crouch1 = not player.crouch1
		if player.crouch1 then
		player.spritenum = 21
		else
		player.spritenum = 22
		end
	
	end

end

	if player.y > 425 and player.pcollect.p1 and curstate == 2 then
	player.x = 968 
	player.y = 404
	end
	
	
	if player.y > 190 and player.pcollect.p2 and curstate == 2 then
	player.x = 968 
	player.y = 168
	end


	prevy = player.y
	prevx = player.x
	
	local dt = time() - prev_t
	

	
	
	if btn(0) and 
				(player.states.idle or
	 		player.states.running or
	 		player.states.walking) then
				
				
						
						player.ddx =0.1
						player.flp = false
						
				player.states.walking = true
				player.states.idle = false
				
				player.slowdown = false


	
	elseif btn(1) and 
						(player.states.idle or
	 				player.states.running or
	 				player.states.walking) then
	
						
						
						player.ddx =0.1
						player.flp = true
						
						
						player.states.walking = true
						player.states.idle = false
						
						player.slowdown = false
	
	else 
	
					if player.states.walking and 
								abs(player.dx) > 0 then
								
					player.ddx = -0.1
					player.slowdown = true
					end
					

	end
	
	if player.states.idle then
		player.dx = 0
		player.ddx = 0
		player.slowdown = false
	end
	

	if player.slowdown then 
		
		if player.dx <= 0  and player.flp then
			player.dx = 0
			player.states.walking = false
			player.states.idle = true
		elseif player.dx >= 0 and not(player.flp) then 	
			player.dx = 0
			player.states.walking = false
			player.states.idle = true
		else
		
			if player.flp then
			player.dx += player.ddx
			else
			player.dx -= player.ddx
			end
		
		
		end
	elseif ((player.dx >= player.maxspeed) 
								and player.flp)
								or 
								((player.dx <= -1 * player.maxspeed)
								and not player.flp) then
		player.dx += 0
	elseif player.flp then
		player.dx += player.ddx
	else
		player.dx -= player.ddx
	end
	
	
	if player.flp then
		if player.x >= 1014 and curstate ==2 then
		player.x = 1014
		elseif player.x >= 880 and curstate == 3 then
		player.x = 880
		else
		player.x += player.dx
		end
		
	else
	
	
		if player.x <= 893 and curstate == 2then
		player.x = 893
		elseif player.x <=770 and curstate ==3 then
		player.x = 770
		else
		player.x += player.dx
		end
	
	end
	
	
	--new jump method
	if btn(5) and (collisionfloor() 
											or collisionbranch()) then
		player.willjump = true
		--player.spritenum = 21
	elseif not (player.states.walking) then
		
		if player.willjump and (collisionfloor() or collisionbranch())  then
			player.states.jumping = true
			player.states.idle = false
			player.states.walking = false
			player.jumpt = 5
			player.starttime = time()
		end
		
		if player.jumpt - dt <0 then
		player.states.jumping = false
		player.states.idle = true
		player.spritenum = 10
		
		end
		
		if player.states.jumping then
			
			player.curtime = time()- player.starttime
			player.willjump = false
			player.jumpt -= dt
			
			if player.flp then
			player.x += 4 * cos(0.1) * player.curtime
			else
			player.x -= 4 * cos(0.1) * player.curtime
			end
			player.y -= 6 * sin(-0.1) + player.g * player.curtime * player.curtime
			player.spritenum = 10
			
			
		end
		
		

	end
	
	if collisioncollect() > 0 then
	
	local m = collisioncollect()
	if m == 1 then
	player.pcollect.p1 = true
	elseif m == 2 then
	player.pcollect.p2 = true
	mset((player.x -1) / 8,player.y / 8 ,0)
	curstate =3
	player.x = 844 
	player.y = 486
	
	elseif m == 3 then
	player.pcollect.p3 = true
	elseif m == 4 then
	player.pcollect.p4 = true
	end
	mset((player.x -1) / 8,player.y / 8 ,0)
	
	end
	
	if scollisioncollect() > 0 then
	
	local m = scollisioncollect()
	if m == 1 then
	player.scollect.p1 = true
	elseif m == 2 then
	player.scollect.p2 = true
	mset((player.x -1) / 8,player.y / 8 ,0)	
	elseif m == 3 then
	player.scollect.p3 = true
	end
	mset((player.x -1) / 8,player.y / 8 ,0)
	
	end
	
	
	
	
	
	if (collisionbranch())  then
		
		if player.landed and not( player.states.jumping) then
		player.y = prevy
		
		elseif player.landed and player.states.jumping then
		
		
		
		elseif test2 == 2 and not player.landed then
			
			player.landed = true
			player.y = prevy
			player.debug = true
			player.spritenum = 6
			
		elseif not (player.willjump) then
			player.dy = 0
			player.states.jumping = false
			player.states.idle = true
			player.y += 0.5
			player.spritenum = 10
		
	
		end
			
		
		
	--player.debug = true
	
	
		
		
	elseif (collisionfloor()) then
		player.landed = false
		player.y = prevy
		player.dy = 0
		if player.states.jumping then
		player.states.jumping = false
		player.spritenum = 6
		player.states.idle = true
		end
		
	else--[[if (collisionbranchbottom()) and test2 == 2 then
	player.y = prevy 
	--player.states.jumping = false
	--player.dy = 0
	else--]]
	
	player.y+=0.5
	player.landed = false
	if not player.states.jumping then
	player.spritenum = 48
	end
	end
	
	--[[if (collisionwall()) then
		player.x = prevx 
		player.states.jumping = false
	
	end]]--
	
	
	
	prev_t = time()
	

end


function updatesplash()

if btn(5) then
curstate =2
end

end

function updatewinscreen()
if btn(5) then
curstate = 1
end
end
-->8




function collisionfloor()
	playerleft = (player.x) / 8
	playerright = (player.x+ 7) /8
	playertop = player.y / 8
	playerbottom= (player.y +7) /8


	collide = 
	fget(mget(playerright,playerbottom),0)  or 
	fget(mget(playerleft,playerbottom),0) or  
	fget(mget(playerleft,playertop),0) or
	fget(mget(playerright,playertop),0)  
	

return collide

end
function collisionwall()

playerleft = (player.x) / 8
playerright = (player.x + 8) /8
playertop = player.y / 8
playerbottom= (player.y + 8) /8

 
	
       ll = fget(mget(playerleft,playerbottom),0) 
       ul = fget(mget(playerleft,playertop),0)
       lr = fget(mget(playerright,playerbottom),0) 
       ur = fget(mget(playerright,playertop),0)


test = true
	
	

	return collide

end

function collisionbranch()

	playerleft = (player.x) / 8
	playerright = (player.x+ 7) /8
	playertop = player.y / 8
	playerbottom= (player.y +7) /8


	collide = 
	fget(mget(playerright,playerbottom),2) or 
	fget(mget(playerleft,playerbottom),2)
	

return collide


end

function collisionbranchbottom()

	playerleft = (player.x) / 8
	playerright = (player.x+ 7) /8
	playertop = player.y / 8
	playerbottom= (player.y +7) /8


	collide = 
	fget(mget(playerright,playertop),2) or 
	fget(mget(playerleft,playertop),2)
	

return collide
end
function collisioncollect()


playerleft = (player.x -1) / 8
playerright = (player.x + 7) /8
playertop = player.y / 8
playerbottom= (player.y + 7) /8
local m1 = mget(playerleft, playertop)
if m1 == 25 or m2 == 25 then 
return 1
elseif m1 == 26 or m2 == 26 then
return 2
elseif m1 == 41 or m2 == 41 then
return 3
elseif m1 == 42 or m2 == 42 then
return 4
end

return 0

end


function scollisioncollect()


playerleft = (player.x -1) / 8
playerright = (player.x + 7) /8
playertop = player.y / 8
playerbottom= (player.y + 7) /8
local m1 = mget(playerleft, playertop)
if m1 == 53 or m2 == 53 then 
return 1
elseif m1 == 54 or m2 == 54 then
return 2
elseif m1 == 55 or m2 == 55 then
return 3
end

return 0

end
		
		

__gfx__
00000000c1c1d1c21c11c111c21c2c11c1621112707000007070000070700000707000007070000070700000000000000000000000000000eeeeeeeeeeeeeeee
000000001c1d1c2ce1211aca212ec61c7c6a6c21777000007770000977700009777000097770000977700009000000000000000000000000eeeeeeeee9e9eeee
00700700c19a10c212116c9c112126c9c697c96e575000005750000757500007575000075750000757500007000000000000020000200000eeeeeeeeee9eeeee
000770005ca9102121c61aca1611616c9aaa96c1777970097779497777794977777949777779497777794977000000000002200000022000eeeeeeeeeeeeee8e
00077000c5c100c21c1c6111c16c26c9a999aca1ff949007fff79770fff79770fff79770fff79770fff79770000000000022000000002220eeeeeeeeeeeee888
0070070021210019a1c111111612dcaca999a9ccf7779477ff777770ff777770ff777770ff777770ff777770222222222200000000000022eeeeeeeeeeaeee8e
000000005e15001a9c11d1dd1d1d2dc69aaa9c71f077f770f070f070f070f0700f70f077f070f0774970ff79222222222000000000000000eeeeeeeeeee9eeee
00000000d52000c111112e211111d169cac7c9cc409497704090409049040090049400094900400900000000000000000000000000000000eeeeeeeeeeeeaeee
000000006c1000111121676c67c1115cac9c6c5300000000000000007070000070700000c17121c171a12c2adddddddd00000000000000000000000000000000
00a9fa00d660000111677cc7cc7c15d5d616213100000000000000007770000077700000a91c121712c9aa91dddddddd00000000000000000000000000000000
0a4444a0cc700006c0dc9c2117ccc15dc16c6313707000007070000057500000575000009a2129a1212a99a2dddddddd00000000000000000000000000000000
0f4dd490c9c0000000cac212c9ac711216c6353f7770000977700090777970907779700962021a91121a99acdddddddd00000000000000000000000000000000
094dd4f01160000000c671e16acd612121c113a95759400757594070ff949070ff949070c6010c1ccd29aa92dddddddd00000000000000000000000000000000
3a4444a372100000006712127dc7c2121311199a7777947777779470f7779470f7779470dc0001cc7cd12c2adddddddd22000000000000220000000000000000
03a9fa30cc70000000252c71cc7c6121115359fbfff7f770fff7f770f077f770f077f7701d000c6dcc721199dddddddd22220000000002220000000000000000
0000000017e00000005251c216c11c111c31f9cb4f9797704f9797704094977040949770cc000727d61c19a0dddddddd00222000000022000000000000000000
00000000ce1000000005057c21e177c17c1a99bc33333333333333330000000000888800c700021261c19a020000000000222000000022000000000000000000
000aaa002c20000000000117ccc7c17ccca9afc03b333b333b333b3300000000089aa9807000002c9c9a00120000000000022200000220000000000000000000
00a444a05210000000000521c12121a9aa6a6900333333333333333300a0030000888800a0000090a9a0c1210000000000002200002200000000000000000000
00a444a0ca600000000052512cc219993b9a1001333333b3333333b300030330000b0000000000000002121d0000000000002220020000000000000000000000
00a444a090a0000000009ca9f9b9a3caa3a000c233b3333333a33333030b0b000003300010000000212121dc0000000000000022000000000000000000000000
000aaa00fc0000000000c6f9b3c69ba00000212c3b3333333aaa3333b3bab3030b00303060000000121dcdc32000000000000000000000000000000000000000
00003000b6000000000000ac3606a0000002222233333b3333a33b330333a3b0003333b0d00000002121653b2200000000000000000000000000000000000000
00000b0000000000000000c000000012122212c2333333333333333300bbb330000b30005000000d56d5d3b30000000000000000000000000000000000000000
707030000000000000000000212216222211212d1c0000009a000000e200000000eeee00111111111111111100000000cccccccccccccccc0000000000000000
7770300913000000000000221212dd6212111261ccc00000aaa00000222000000efaafe0111111111a1c111100000000cccccccccac1cccc0000000000000000
57500b0731000000000000102122161d222c1dcd0c4500000a4500000245000000eeee001111111111c1111100000000cccccccccc1ccccc0000000000000000
777939771300000000000000122111ddd2c1c1d9005650000056500000565000000b0000111111111111111100000000cccccccccccccccc0000000000000000
fff737704d4000000000000021221c16c11c159500056500000565000005650000033000111111111111a11100000000ccccccccccccaccc0000000000000000
ff7737704a40000000000000d261616ccc155b5b0000565000005650000056500b0030301111111111111c1100000002ccccccccccccc1cc0000000000000000
4970ff79d4a000000000000d565d5d6dc15953b3000005650000056500000565003333b011111111111111a100000022ccccccccccccccac0000000000000000
0000000041410000000000051515151299951b3b000000550000005500000055000b3000111111111111111100000000cccccccccccccccc0000000000000000
ddddddddddddddddddddeddddddddddd000000000000000000000000000000000000000000000000000000000000000002222222222222222222222000000000
de1dddddddddeddddddeded1dddddded000000000000000000000000000000000000000000000000000000000000000022ffffffffffffffffffff2200000000
edd1dddddddeddd11dddedddd1d1dddd00000000777000000000000000000000077777000000000000000000000000002ffc1fffff9afffffe2ffff200000000
ddddddddd1dddddd1ddddededd1ddd1d00000000797000000000000000000000779997000000000077700777000000002ff16fffffa6fffff26ffff200000000
d1ddeddd11ddddddddd1ddededddd1d100000000797000000000000000000000799999700000000079700797000000002ffff6ffffff6ffffff6fff200000000
1d1dd1dddddddd1ddd1d1ddedddd1d1d00000000797000000000077770000000799777700000000079700797000000002fffff6ffffff6ffffff6ff200000000
d1dd1dddddddd111d1d1dddddd11d1d1777000007970000000007777770000007970000000000000797777970000777022ffffffffffffffffffff2200000000
1d1d1d1d1d1d1d1d1ddd1d111d1d1d1d797000007970000007777999970000007970000000000000779799770777997002222222222222222222222000000000
d1d1d1d1d1d1d1d1d1d1d111d1d1d1d1797000007970777777977977997000007970000000000000079797700779777002222222222222222222222000000000
11111d1111111d11111d11111d111111797700007977999977979977797000007970000000000777779997000799977022ffffffffffffffffffff2200000000
1d11111d1111111111ddd1111111111179970000797977797779977079700000797000000007779999997700079799772ff55fffff55fffff55ffff200000000
111d11d11111d111111d11111111111177977000797779997779770079700000797700000007799777797000079777972ff55fffff55fffff55ffff200000000
11111111111111d1111111111111111107997700797079799779770079700000799700000007797700797700079707972ffff5ffffff5ffffff5fff200000000
1d11111111111111111111111111a11107799700797079799779770079700000779700000007777000779770079707972fffff5ffffff5ffffff5ff200000000
111111111111111111111111111aca11077997007977797997799700797000000797000007777777777799700799779722ffffffffffffffffffff2200000000
11111111111111111f1111111111a111007797707977977999779770797077000797700077999779997779700799999702222222222222222222222000000000
1111111111111c1f11f1111111111111000799707977977999779970799777700799700779999799797777970797777702222222222222222222222222222220
111111111111c1c1111111111111111c000779777977977979777970779779700779707799779797797007970797000022ffffffffffffffffffffffffffff22
1111111111111c1111111111111111c100077977797797977997797707977970007970799707979779700799779700002ffa1c9fffc002ffffc9a9fffa921ff2
111a111111111111111111111111f11100007997797799977797777707799770007977797707979779707779999700002ff902afffd009ffff2a9afff921cff2
11afa111111111111111111c111f1f1100007797797779970777000000799770007797777007979779977977777700002ff200cfff1000ffff19a9fff21d5ff2
f11a1a111111111a111111c1c111f11100007797797077770000000000777700007797700007979779999970000000002ff7001fff6000ffffd12cfff16c3ff2
1f11111111c11ca11c1f111c11111111000007797970000000000000000000000007797000079799797777700000000022ffffffffffffffffffffffffffff22
c1c11111c11c1cc111f1c1c11111111c000000799970000000000000000000000000797700079779997000000000000002222222222222222222222222222220
111c1f1ccc11c111c11f1c11c111c1c1000000779970000000000000000000000000779770079777777000000000000002222222222222222222222222222220
c1f1c1c1c11c1c1c1c11c1cc1c1c1f1c000000079970000000000000000000000000079977079777000000000000000022ffffffffffffffffffffffffffff22
1c1c1f1c11a111c1c1cc1c1cc111f1c100000007997000000000000000000000000007799777977000000000000000002ff5555fff5555ffff5555fff5555ff2
c1ccc1c1cafa1f1cccf1c1cccf1ccf1c00000007777000000000000000000000000000779977977000000000000000002ff5555fff5555ffff5555fff5555ff2
cf11fcfcccacfffc111fccccfffcc1fc00000000777000000000000000000000000000077999977000000000000000002ff5555fff5555ffff5555fff5555ff2
cffccfcccccccfc1c1cccccccfcccfcf00000000000000000000000000000000000000007777770000000000000000002ff5555fff5555ffff5555fff5555ff2
cfccccccfcfcccccccccccfcccccfcfc000000000000000000000000000000000000000000000000000000000000000022ffffffffffffffffffffffffffff22
cccccccccfcccccccccccccfcccccfcc000000000000000000000000000000000000000000000000000000000000000002222222222222222222222222222220
99999999999999999999a99999999999dddddddddddddddddddd1ddddddddddd0000000000000000000000000000000000000000000000000000000000000000
9ae999999999a999999a9a9e999999a9d1cddddddddd1dddddd1d1dcdddddd1d00b1b1b1b0c000000000b1b10000000000000000b10000000000b1b0b0c00000
a99e9999999a999ee999a9999e9e99991ddcddddddd1dddccddd1ddddcdcdddd0000000000000000000000000000000000000000000000000000000000000000
999999999e999999e9999a9e99e999e9dddddddddcddddddcdddd1dcddcdddcd000000b1000000000000b1b1b0b0c00000000000b10000d0b0b0b10000000000
9e99a999ee999999999e99e9e9999e9edcdd1dddccdddddddddcddcdcddddcdc0000000000000000000000000000000000000000000000000000000000000000
e9e99e99999999e999e9e99e9999e9e9cdcddcddddddddcdddcdcddcddddcdcd00d0b0b1b1b10000000000b10000000000000000b10000000000b15300000000
9e99e99999999eee9e9e999999ee9e9edcddcddddddddcccdcdcddddddccdcdc0000000000000000000000000000000000000000000000000000000000000000
e9e9e9e9e9e9e9e9e999e9e9e9e9e9e9cdcdcdcdcdcdcdcdcdddcdc1cdcdcdcd0000000000b1b0c0000000b10000000000d0b0b0b10000000000b1b0b2000000
9e9e9e9e9e9e9e9e9e9e9e9e9e9e9e9edcdcdcdcdcdcdcdcdcdcdc1cdcdcdcdc0000000000000000000000000000000000000000000000000000000000000000
eeeee9eeeeeeeaeeeee9eeeee9eeeeeecccccdcccccccdcccccdcccccdcccccc0000000000b10000000000b10000000000000000b10000000000b10000000000
e9eeeeeaeeeeeeeeee999eeeeeeeeeaecdcccccdccccccccccdddccccccccc1c0000000000000000000000000000000000000000000000000000000000000000
eee9eeaeeaeeaeeeeee9eeeeeeeeeaeecccdccdcc1ccdccccccdccccccccc1cc00000000b1b10000d1b0b0b10000000000000000b1b0b0b20000b10000000000
eaeeeeeeeaaeeeaeeeeeeeeeeeeeeeeec1ccccccc11cccdccccccccccccccccc0000000000000000000000000000000000000000000000000000000000000000
a9aeeeeeeeeeeeeeeeeeeeeeeeee8eee1d1cccccccccccccccccccccccccaccc00000000b1000000d20000b1b1b1b0c000000000b10000000000b10000000000
eaeeeeeeeeeeeeeeeeeeeeeeeee8e8eec1cccccccccccccccccccccccccacacc0000000000000000000000000000000000000000000000000000000000000000
eeeeeeeeeeeeeeeee9eeeeeeeeee8eeecccccccccccccccccfccccccccccaccc00000000b10000000000000000b1000000000000b1000000d0b0b1b0c1000000
eeeeeeeeeeeeede1ee1eeeeeeeeeeeeeccccccccccccc6cfccfccccccccccccc0000000000000000000000000000000000000000000000000000000000000000
eeeeeeeeeeeededeeeeeeeeeeeeeeeedcccccccccccc6c6cccccccccccccccc600d0b0b0b1b100000000000000b1b10000d0b0b0b10000000000b100c2000000
eeeeeeeeeeeeedeeeeeeeeeeeeeeeedeccccccccccccc6cccccccccccccccc6c0000000000000000000000000000000000000000000000000000000000000000
eee8eeeeeeeeeeeeeeeeeeeeeeee1eeecccaccccccccccccccccccccccccfccc0000000000b10000000000d1b0b0b1b100000000b10000000000b10000000000
ee818eeeeeeeeeeeeeeeeee1eee1e1eeccafaccccccccccccccccccfcccfcfcc0000000000000000000000000000000000000000000000000000000000000000
1ee8e8eeeeeeeee8eeeeee1e1eee1eeefccacacccccccccaccccccfcfcccfccc0000000000b1b0b2000000d20000000000000000b1b0b2000000b1b0b0c00000
e1eeeeeeeedeed8eede1eee1eeeeeeeecfcccccccc6cc6acc6cfcccfcccccccc0000000000000000000000000000000000000000000000000000000000000000
eedeeeeedeededdeee1ede1eeeeeeeed6c6ccccc6cc6c66cccfc6cfcccccccc60000000000b1b1b1b1b1b1000000000000000000b10000000000b10000000000
eeede1edddeedeeedee1edeedeeededeccc6cfc666cc6ccc6ccfc6cc6ccc6c6c0000000000000000000000000000000000000000000000000000000000000000
de1edededeededededeededdedede1ed6cfc6c6c6cc6c6c6c6cc6c66c6c6cfc60000000000000000d0b0b1000000000000000000b1000000d1b0b10000000000
edede1edee8edddededdededdeee1edec6c6cfc6ccac6c6c6c66c6c66cccfc6c0000000000000000000000000000000000000000000000000000000000000000
dedddeded818e1eddd1ededdd1edd1ed6c666c6c6afacfc666fc6c666fc66fc60000000000000000b1b1b1b0b200000000000000b1000000d200b10000000000
d1ee1d1ddd8d111deee1dddd111dde1d6fccf6f666a6fff6cccf6666fff66cf60000000000000000000000000000000000000000000000000000000000000000
d11dd1ddddddd1dededdddddd1ddd1d16ff66f6666666f6c6c6666666f666f6f0000000000009200b10000000000000000000000b10000000000b10000000000
d1dddddd1d1ddddddddddd1ddddd1d1d6f666666f6f66666666666f66666f6f60000000000000000000000000000000000000000000000000000000000000000
ddddddddd1ddddddddddddd1ddddd1dd666666666f6666666666666f66666f660000000000d0b0b0b1b1b1b10000000000000000b1b0b2000000b10000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000b1b1b0b20000000000b10000000000b10000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b1b1000000000000b10000000000b1b0c0000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b1000000000000b10000000091b10000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000d0b0b0b100000000d1b0b1000000d0b0b10000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b100000000d200b10000000000b10000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000b1b1b1b1b10000b1b1b0c000000000b10000000000b1b0b0b20000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000b100d0b0b100b1b100000000000000b10000000000b10000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000b1b1b1b1b1b1b10000000000000000b10000d0b0b0b10000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000b100000000000000000000b10000000000b10000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000730000b1b1b1b0b20000000000000000b1b0b2000000b10000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000b3b0b1b1b1b10000000000000000d0b0b0b10000000000b10000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000b1000000000000b1b0b20000000000b10000000000b1b0b0b20000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000b1b1b1000000000000b1b1000000000000b10000000000b10000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000b10000000000d0b0b0b0b1000072727282b17272837272b17272728372
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000082b1b1b10082000000b1b1b1000052526252526252625252625252525262
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000005252525252525252525252525252520052625252625252526252526252526252
__gff__
0000000000000000000000060404000000000000000000000008080004040000000000000001010000080800040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
4041424341434043424241434240424180818382808180818082808380818082107c7d7e7f105c5d5e100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5051525352535251535053525051525090919390909290939090919392939091000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
61633a6039613a3962393a61396139390e0f0e0e910e0e0e0e0e0e0e910e0e0f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
393939393939393939393939613a39390e0e0e0e0e0e0f0e0e0e0e0e0e0e0e0e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
393939393939393939393939616039390e0e0e0e0e0e0e0e0e0e0e0e0e0e0f0e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
393939393939396162633939393939390e0e0e0f0e0e0e0e0e0e0e0e0e0e0e0e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
396263393939393961633939393939620e0e0e0e0e0e0e0e0e0ea20e0e0ea0a2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
60393a623939393939396339393939390ea10e0e0e0e0e0e0e0f0e0e0e0e0ea300000000000000000000000000000000000000000000000000000000000000000000004445464748494a4b0020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
39393939393939393939393939393939a00ea30e0e0e0e0e0e0e0e0ea00e0e0e00000000000000000000000000000000000000000000000000000000000000000000005455565758595a5b2830000000000000000000000000000000000000000000000000000000002a00000000000000000000000000000000000000000000
393939393939393939393939393939390e0e0e0e0e0e0e0e0e0e0e0ea30e0e0e00000000000000000000000000000000000000000000000000000000000000000000006465666768696a6b0000000000000000000000000000000000000000000000000000001b0b0b1c00000000000000000000000000000000000000000000
636039623939613939626061633939610e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e00000000000000000000000000000000000000000000000000000000000000000000007475767778797a7b00000000000000000000000000000000000000000000000000001b1b00002c00000000000000000000000000000000000000000000
626360616261633963626362393962630e0ea20e0e0e0ea20e0e0e0e0e0e0ea300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001b1b0000000000000000000000000000000000000000000000000000
60616263626262626262626262626262a2a0a30ea1a2a0a1a30e0ea2a0a1a3a2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d0b0b1b1b0b0b0c000000000000000000000000000000000000000000000000
70717273737273717371707372737271b0b1b2b0b1b3b2b1b0b3b1b0b2b0b1b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001b1b000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001b1b1b1b000000000000000000bf000000001b00000000001b00000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001d0b1b1b1b1b1b0b0c00000000000000001b1b0b1c00001b1b0b0c0000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002d000000001b1b1b1b0000000000003b0b1b00002c00001b0000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001b1b1b0b0b0c000000001b00000000001b1b00000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d0b1b00000000000000001b1b00000000000000001b000d0b0b0b1b00000000
00000000000000000000000000000000000000000000000000000000000000000000000000000102030400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001b0b0b0c00000000001b1b000000000000001b1b000000001b1b00000000
00000000000000009b9c9d9e000000000000000000000000000000000000000000000000000011121314000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001b0000000000001d0b0b1b1b00000000000d0b1b00000000001b0000000000
0000000000000000abacadae0000000000000000000000000000000000000000000000000000212223240000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001b000000000000002d00001b1b000000000000001b000000001a1b0000000000
0000000000000000bbbcbdbe000000000000000000000000000000000000000000000000000031323334000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d0b1b1b1b1b1b00001b1b1b000000000000001b00000d0b0b1b0000000000
0000000000000000cbcccdce0000000000000000000000000f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001b1b0036001b1b1b1b0000000000000000001b00000000001b0000000000
0000000000000000cbcccdce0000000000000000000000001f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001b000d0b0b0b1b1b000000000000000000001b00000000001b0000000000
9c999a9b9c999a9b9c999a9b9c999a9b9c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001b1b0000001b1b00000000000000000000001b0000003b0b1b0000000000
aca9aaabaca9aaabaca9aaabaca9aaabac000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d0b0b1b1b1b1b1b1b0b0c0000000000000000001b00000000001b0b0b0c0000
bcb9babbbcb9babbbcb9babbbcb9babbbc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001b00000000000000000000001b00000000001b0000000000
ccc9cacbccc9cacbccc9cacbccc9cacbcc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001b00000000000000001d0b0b1b00000000001b0000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001d0b0b1b1b000000000000002d00001b000d0b0b0b1b0b2b000000
0000000000000000000000000000000000000f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002d0000001b0b0b1c000000000000001b00000000001b0000000000
0000000000000000000000000000000000001f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001b1b000000000000001b1b002c000000000000001b0b0c0000001b0000000000
__sfx__
000300000f75217752197521c75200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00030000015520155201552015521d75223750287502b7502e7503275036750397500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
